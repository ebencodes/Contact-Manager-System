{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/Header.js","components/pages/About.js","components/pages/NotFound.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","result","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","Header","branding","href","defaultProps","About","NotFound","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updatedContact","match","params","put","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.353847a4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nconst Context = React.createContext();\r\n\r\n/**The reducer function accepts the current state and action('DELETE_CONTACT') and returns the filtered state\r\n * The id to be filtered out is also passed into from the action as payload\r\n */\r\nconst reducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'DELETE_CONTACT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: state.contacts.filter(\r\n\t\t\t\t\t(contact) =>\r\n\t\t\t\t\t\tcontact.id !== action.payload,\r\n\t\t\t\t),\r\n\t\t\t};\r\n\r\n\t\tcase 'ADD_CONTACT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: [\r\n\t\t\t\t\taction.payload,\r\n\t\t\t\t\t...state.contacts,\r\n\t\t\t\t],\r\n\t\t\t};\r\n\r\n\t\tcase 'UPDATE_CONTACT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: state.contacts.map((contact) =>\r\n\t\t\t\t\tcontact.id === action.payload.id\r\n\t\t\t\t\t\t? (contact = action.payload)\r\n\t\t\t\t\t\t: contact,\r\n\t\t\t\t),\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n//Context API can hold the state for small projects\r\nexport class Provider extends Component {\r\n\tstate = {\r\n\t\tcontacts: [],\r\n\t\t/**The dispatch function accepts the action parameter which is\r\n\t\t * passed into the reducer function. The dispatch can be accessed\r\n\t\t *  whereever the state can be accessed. The dispatch function is\r\n\t\t * used to mutate the state.\r\n\t\t */\r\n\t\tdispatch: (action) =>\r\n\t\t\tthis.setState((state) =>\r\n\t\t\t\treducer(state, action),\r\n\t\t\t),\r\n\t};\r\n\r\n\t// Using .then\r\n\t/**componentDidMount() {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t'https://jsonplaceholder.typicode.com/users',\r\n\t\t\t)\r\n\t\t\t.then((result) =>\r\n\t\t\t\tthis.setState({ contacts: result.data }),\r\n\t\t\t);\r\n\t}**/\r\n\r\n\t// Using AsynAwait\r\n\tasync componentDidMount() {\r\n\t\tconst result = await axios.get(\r\n\t\t\t'https://jsonplaceholder.typicode.com/users',\r\n\t\t);\r\n\t\tthis.setState({ contacts: result.data });\r\n\t}\r\n\r\n\t// This gives off a value that holds the state. (value = {this.state})\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Context.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</Context.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Provider;\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../Context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n\tstate = {\r\n\t\tshowContactInfo: false,\r\n\t};\r\n\r\n\t//using .then\r\n\t/**onDeleteClick = (id, dispatch) => {\r\n\t\taxios\r\n\t\t\t.delete(\r\n\t\t\t\t`https://jsonplaceholder.typicode.com/users/${id}`,\r\n\t\t\t)\r\n\t\t\t// what is passsed into the dispatch is the action\r\n\t\t\t.then((result) =>\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'DELETE_CONTACT',\r\n\t\t\t\t\tpayload: id,\r\n\t\t\t\t}),\r\n\t\t\t);\r\n\t};**/\r\n\r\n\t//using AsyncAwait\r\n\tonDeleteClick = async (id, dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait axios.delete(\r\n\t\t\t\t`https://jsonplaceholder.typicode.com/users/${id}`,\r\n\t\t\t);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'DELETE_CONTACT',\r\n\t\t\t\tpayload: id,\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\t// what is passsed into the dispatch is the action\r\n\t\t\t/**action = {\r\n\t\t\t * type: 'DELETE_CONTACT',\r\n\t\t\t * payload: 'id'} */\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'DELETE_CONTACT',\r\n\t\t\t\tpayload: id,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tid,\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tphone,\r\n\t\t} = this.props.contact;\r\n\t\tconst { showContactInfo } = this.state;\r\n\t\treturn (\r\n\t\t\t/**\r\n\t\t\t * we need to wrap whatever we are returning around the consumer\r\n\t\t\t * tag so as to access the value been got from the context\r\n\t\t\t */\r\n\t\t\t<Consumer>\r\n\t\t\t\t{(value) => {\r\n\t\t\t\t\tconst { dispatch } = value;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className='card mb-3'>\r\n\t\t\t\t\t\t\t<div className='card-body'>\r\n\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t{name}{' '}\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t//eventListener to hide/show content of the component (state:true/false)\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\t\tshowContactInfo: !this\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.state.showContactInfo,\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='fas fa-sort-down'\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t></i>{' '}\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName='fas fa-times'\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tfloat: 'right',\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'red',\r\n\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t//eventListener to delete a component\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.onDeleteClick.bind(\r\n\t\t\t\t\t\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\t\t\t\t\t\tid,\r\n\t\t\t\t\t\t\t\t\t\t\tdispatch,\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t<Link to={`/edit/${id}`}>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='fas fa-pencil-alt'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tfloat: 'right',\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'black',\r\n\t\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: '1rem',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t{showContactInfo ? (\r\n\t\t\t\t\t\t\t\t\t<ul className='list-group'>\r\n\t\t\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t\t\tEmail: {email}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t\t\tPhone: {phone}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n//This is used for type-checking the properties being passed into the components\r\nContact.propTypes = {\r\n\tcontact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\n\r\n// We import the consumer when we intend to use the state.\r\nimport { Consumer } from '../../Context';\r\n\r\nexport class Contacts extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t/**To access anything from the context Api, we need to wrap\r\n\t\t\t * what ever we intend to return with the consumer tag.\r\n\t\t\t * note that the state is currently been got from the context*/\r\n\t\t\t<Consumer>\r\n\t\t\t\t{(value) => {\r\n\t\t\t\t\tconst { contacts } = value;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t/**React.Fragment is used to take out unnessary element. A div in here is not need */\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<h1 className='display-4 mb-4'>\r\n\t\t\t\t\t\t\t\t<span className='text-danger'>\r\n\t\t\t\t\t\t\t\t\tContact\r\n\t\t\t\t\t\t\t\t</span>{' '}\r\n\t\t\t\t\t\t\t\tList\r\n\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t{contacts.map((contact) => (\r\n\t\t\t\t\t\t\t\t<Contact\r\n\t\t\t\t\t\t\t\t\tkey={contact.id}\r\n\t\t\t\t\t\t\t\t\tcontact={contact}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\tconst { branding } = props;\r\n\treturn (\r\n\t\t<nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<a href='/' className='navbar-brand'>\r\n\t\t\t\t\t{branding}\r\n\t\t\t\t</a>\r\n\t\t\t\t<ul className='navbar-nav ml-auto'>\r\n\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t<Link to='/' className='nav-link'>\r\n\t\t\t\t\t\t\t<i className='fas fa-home'>Home</i>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto='/contact/add'\r\n\t\t\t\t\t\t\tclassName='nav-link'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fas fa-plus'>Add</i>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto='/about'\r\n\t\t\t\t\t\t\tclassName='nav-link'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fas fa-question'>\r\n\t\t\t\t\t\t\t\tAbout\r\n\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\n//The default props would be the prop value when the props is not defined\r\nHeader.defaultProps = {\r\n\tbranding: 'My App',\r\n};\r\n\r\nHeader.propTypes = {\r\n\tbranding: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","const About = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className='display-4'>\r\n\t\t\t\tAbout Contact Manager\r\n\t\t\t</h1>\r\n\t\t\t<p className='lead'>\r\n\t\t\t\tSimple app tpo manage contacts\r\n\t\t\t</p>\r\n\t\t\t<p className='text-secondary'>\r\n\t\t\t\tVerion 1.0.0\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n/**To get a parameters from a link\r\n * {props.match.params.id}\r\n * The props must be passed into the component\r\n * The id could be whatever we set to be linked to at the Route path\r\n* e.g path='/about/:id'\r\n path='/about/:name'\r\n */\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className='display-4'>\r\n\t\t\t\t<span className='text-danger'>404</span>{' '}\r\n\t\t\t\tPage Not Found\r\n\t\t\t</h1>\r\n\t\t\t<p className='lead'>\r\n\t\t\t\t{' '}\r\n\t\t\t\tSorry, that page does not exist\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//classnames is used to dynamically add a conditional className\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n\tlabel,\r\n\tvalue,\r\n\ttype,\r\n\tname,\r\n\tplaceholder,\r\n\tonChange,\r\n\terror,\r\n}) => {\r\n\treturn (\r\n\t\t<div className='form-group'>\r\n\t\t\t<label htmlFor={name}>{label}</label>\r\n\t\t\t<input\r\n\t\t\t\tclassName={classnames(\r\n\t\t\t\t\t'form-control form-control-lg',\r\n\t\t\t\t\t{ 'is-invalid': error },\r\n\t\t\t\t)} //'form-control form-control-lg'\r\n\t\t\t\ttype={type}\r\n\t\t\t\tname={name}\r\n\t\t\t\tid={name}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t{error && (\r\n\t\t\t\t<div className='invalid-feedback'>\r\n\t\t\t\t\t{error}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n\tlabel: PropTypes.string.isRequired,\r\n\tvalue: PropTypes.string.isRequired,\r\n\ttype: PropTypes.string.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\tplaceholder: PropTypes.string.isRequired,\r\n\tonChange: PropTypes.func.isRequired,\r\n\terror: PropTypes.string.isRequired,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n\ttype: 'text',\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport axios from 'axios';\r\n//import * as uuid from 'uuid';\r\nimport TextInputGroup from '../layouts/TextInputGroup';\r\n\r\nexport class AddContact extends Component {\r\n\tstate = {\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tphone: '',\r\n\t\terrors: {},\r\n\t};\r\n\r\n\tonSubmit = async (dispatch, e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst { name, email, phone } = this.state;\r\n\r\n\t\t//Check for error\r\n\t\tif (name === '') {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrors: { name: 'Name is required' },\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (email === '') {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrors: { email: 'Email is required' },\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (phone === '') {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrors: { phone: 'Phone is required' },\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst newContact = {\r\n\t\t\t//id: uuid.v1(),\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tphone,\r\n\t\t};\r\n\r\n\t\t//using .then\r\n\t\t/**axios\r\n\t\t\t.post(\r\n\t\t\t\t'https://jsonplaceholder.typicode.com/users',\r\n\t\t\t\tnewContact,\r\n\t\t\t)\r\n\t\t\t.then((result) =>\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'ADD_CONTACT',\r\n\t\t\t\t\tpayload: result.data,\r\n\t\t\t\t}),\r\n\t\t\t);**/\r\n\r\n\t\t//using AsyncAwait\r\n\t\tconst result = await axios.post(\r\n\t\t\t'https://jsonplaceholder.typicode.com/users',\r\n\t\t\tnewContact,\r\n\t\t);\r\n\t\tdispatch({\r\n\t\t\ttype: 'ADD_CONTACT',\r\n\t\t\tpayload: result.data,\r\n\t\t});\r\n\r\n\t\t//clear state after clicking submit\r\n\t\tthis.setState({\r\n\t\t\tname: '',\r\n\t\t\temail: '',\r\n\t\t\tphone: '',\r\n\t\t\terrors: {},\r\n\t\t});\r\n\r\n\t\t//To go back to the home page after adding a contact\r\n\t\tthis.props.history.push('/');\r\n\t};\r\n\r\n\t/**\tThis function connects the input values to the state. \r\n\tThe state is set immediately this function is invoked**/\r\n\tonChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tphone,\r\n\t\t\terrors,\r\n\t\t} = this.state;\r\n\t\treturn (\r\n\t\t\t<Consumer>\r\n\t\t\t\t{(value) => {\r\n\t\t\t\t\tconst { dispatch } = value;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className='card mb-3'>\r\n\t\t\t\t\t\t\t\t<div className='card-header'>\r\n\t\t\t\t\t\t\t\t\tAdd Contact\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='card-body'>\r\n\t\t\t\t\t\t\t\t\t<form\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit.bind(\r\n\t\t\t\t\t\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\t\t\t\t\t\tdispatch,\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter Name...'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\terror={errors.name}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter email address...'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\terror={errors.email}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Phone Number'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter phone number...'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\terror={errors.phone}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue='Add Contact'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-block btn-danger btn-lg'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport axios from 'axios';\r\n//import * as uuid from 'uuid';\r\nimport TextInputGroup from '../layouts/TextInputGroup';\r\n\r\nexport class EditContact extends Component {\r\n\tstate = {\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tphone: '',\r\n\t\terrors: {},\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst { id } = this.props.match.params;\r\n\t\tconst result = await axios.get(\r\n\t\t\t`https://jsonplaceholder.typicode.com/users/${id}`,\r\n\t\t);\r\n\t\tconst contact = result.data;\r\n\t\tthis.setState({\r\n\t\t\tname: contact.name,\r\n\t\t\temail: contact.email,\r\n\t\t\tphone: contact.phone,\r\n\t\t});\r\n\t}\r\n\tonSubmit = async (dispatch, e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst { name, email, phone } = this.state;\r\n\r\n\t\t//Check for error\r\n\t\tif (name === '') {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrors: { name: 'Name is required' },\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (email === '') {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrors: { email: 'Email is required' },\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (phone === '') {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrors: { phone: 'Phone is required' },\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst updatedContact = {\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tphone,\r\n\t\t};\r\n\r\n\t\t//Getting the ID\r\n\t\tconst { id } = this.props.match.params;\r\n\r\n\t\tconst result = await axios.put(\r\n\t\t\t`https://jsonplaceholder.typicode.com/users/${id}`,\r\n\t\t\tupdatedContact,\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: 'UPDATE_CONTACT',\r\n\t\t\tpayload: result.data,\r\n\t\t});\r\n\r\n\t\t//clear state after clicking submit\r\n\t\tthis.setState({\r\n\t\t\tname: '',\r\n\t\t\temail: '',\r\n\t\t\tphone: '',\r\n\t\t\terrors: {},\r\n\t\t});\r\n\r\n\t\t//To go back to the home page after adding a contact\r\n\t\tthis.props.history.push('/');\r\n\t};\r\n\r\n\t/**\tThis function connects the input values to the state. \r\n\tThe state is set immediately this function is invoked**/\r\n\tonChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tphone,\r\n\t\t\terrors,\r\n\t\t} = this.state;\r\n\t\treturn (\r\n\t\t\t<Consumer>\r\n\t\t\t\t{(value) => {\r\n\t\t\t\t\tconst { dispatch } = value;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className='card mb-3'>\r\n\t\t\t\t\t\t\t\t<div className='card-header'>\r\n\t\t\t\t\t\t\t\t\tEdit Contact\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='card-body'>\r\n\t\t\t\t\t\t\t\t\t<form\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit.bind(\r\n\t\t\t\t\t\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\t\t\t\t\t\tdispatch,\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter Name...'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\terror={errors.name}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter email address...'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\terror={errors.email}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<TextInputGroup\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Phone Number'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter phone number...'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\terror={errors.phone}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue='Update Contact'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-block btn-danger btn-lg'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EditContact;\r\n","//Imported Modules\nimport React from 'react';\nimport {\n\tHashRouter as Router,\n\tRoute,\n\tSwitch,\n} from 'react-router-dom';\nimport './App.css';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layouts/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Provider from './Context';\n\n//We wrap the imported provider as a tag around what we intend to return\nfunction App() {\n\treturn (\n\t\t<Provider>\n\t\t\t<Router>\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<Header branding='Contact Manager' />\n\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/'\n\t\t\t\t\t\t\t\tcomponent={Contacts}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/contact/add'\n\t\t\t\t\t\t\t\tcomponent={AddContact}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/about'\n\t\t\t\t\t\t\t\tcomponent={About}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/edit/:id'\n\t\t\t\t\t\t\t\tcomponent={EditContact}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}